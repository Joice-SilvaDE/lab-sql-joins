-- Challenge - Joining on multiple tables
-- Write SQL queries to perform the following tasks using the Sakila database:
use sakila;

-- 1 List the number of films per category.
select name, count(title)
from category
inner join film_category
on category.category_id = film_category.category_id
inner join film
on film.film_id= film_category.film_id
group by name ;

-- 2 Retrieve the store ID, city, and country for each store.
SELECT store.store_id, city.city, country.country
FROM store
INNER JOIN address 
ON store.address_id = address.address_id
INNER JOIN city 
ON address.city_id = city.city_id
INNER JOIN country 
ON city.country_id = country.country_id;

-- 3 Calculate the total revenue generated by each store in dollars.
 select sum(amount)
 from payment;

-- 4 Determine the average running time of films for each category.
select category.name, avg(film.length)
from category
inner join film_category
on category.category_id = film_category.category_id
inner join film
on film_category.film_id = film.film_id
group by name;

-- Bonus:
-- 5 Identify the film categories with the longest average running time.
-- 6 Display the top 10 most frequently rented movies in descending order.
-- 7 Determine if "Academy Dinosaur" can be rented from Store 1.
-- 8 Provide a list of all distinct film titles, along with their availability status in the inventory. Include a column indicating whether each title is 'Available' or 'NOT available.' Note that there are 42 titles that are not in the inventory, and this information can be obtained using a CASE statement combined with IFNULL."